{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/regex.ts","components/TextField/TextField.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","checkValidUrl","url","test","TextField","name","value","label","required","onChange","validateValue","useState","Math","random","toString","slice","id","touched","setToched","hasError","trim","hasInvalidValue","htmlFor","classNames","type","placeholder","event","target","onBlur","NewMovie","onAdd","count","setCount","setTitle","setDescription","setImgUrl","setImdbUrl","setImdbId","areRequiredFieldsFilled","length","newMovie","onSubmit","preventDefault","disabled","App","moviesFromServer","moviesList","setMoviesList","previousMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8107abc7.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","export const checkValidUrl = (url: string): boolean => {\n// eslint-disable-next-line max-len\n  const pattern = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@,.\\w_]*)#?(?:[,.!/\\\\\\w]*))?)$/;\n\n  return pattern.test(url);\n};\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\n\ntype Props = {\n  name: string,\n  value: string,\n  label?: string,\n  required?: boolean,\n  onChange?: (newValue: string) => void,\n  validateValue?: (value: string) => boolean;\n};\n\nfunction getRandomDigits() {\n  return Math.random().toString().slice(2);\n}\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  label = name,\n  required = false,\n  onChange = () => { },\n  validateValue = () => true,\n}) => {\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n\n  const [touched, setToched] = useState(false);\n  const hasError = touched && required && !value.trim();\n  const hasInvalidValue = value && !validateValue(value);\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          id={id}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': hasError,\n          })}\n          type=\"text\"\n          placeholder={`Enter ${label}`}\n          value={value}\n          onChange={event => onChange(event.target.value)}\n          onBlur={() => setToched(true)}\n        />\n      </div>\n\n      {hasError && (\n        <p className=\"help is-danger\">{`${label} is required`}</p>\n      )}\n\n      {hasInvalidValue && (\n        <p className=\"help is-danger\">{`${label} is invalid`}</p>\n      )}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { Movie } from '../../types/Movie';\nimport { checkValidUrl } from '../regex';\nimport { TextField } from '../TextField';\n\ntype Props = {\n  onAdd: (movie: Movie) => void;\n};\n\nexport const NewMovie: React.FC<Props> = ({ onAdd }) => {\n  const [count, setCount] = useState(0);\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [imgUrl, setImgUrl] = useState('');\n  const [imdbUrl, setImdbUrl] = useState('');\n  const [imdbId, setImdbId] = useState('');\n\n  const areRequiredFieldsFilled = title.trim().length\n    && checkValidUrl(imgUrl)\n    && checkValidUrl(imdbUrl)\n    && imdbId.trim().length;\n\n  const movieMaker = (\n    movieTitle: string,\n    movieDescription: string,\n    movieImgUrl: string,\n    movieImdbUrl: string,\n    movieImdbId: string,\n  ) => {\n    return {\n      title: movieTitle,\n      description: movieDescription,\n      imgUrl: movieImgUrl,\n      imdbUrl: movieImdbUrl,\n      imdbId: movieImdbId,\n    };\n  };\n\n  const newMovie = movieMaker(\n    title,\n    description,\n    imgUrl,\n    imdbUrl,\n    imdbId,\n  );\n\n  const clearData = () => {\n    setTitle('');\n    setDescription('');\n    setImgUrl('');\n    setImdbUrl('');\n    setImdbId('');\n  };\n\n  const handleAddNewMovie = (event: React.ChangeEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    setCount(count + 1);\n    onAdd(newMovie);\n    clearData();\n  };\n\n  return (\n    <form\n      className=\"NewMovie\"\n      key={count}\n      onSubmit={handleAddNewMovie}\n    >\n      <h2 className=\"title\">\n        Add a movie\n      </h2>\n\n      <TextField\n        name=\"title\"\n        label=\"Title\"\n        value={title}\n        onChange={setTitle}\n        required\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        value={description}\n        onChange={setDescription}\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        value={imgUrl}\n        onChange={setImgUrl}\n        validateValue={checkValidUrl}\n        required\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        value={imdbUrl}\n        onChange={setImdbUrl}\n        validateValue={checkValidUrl}\n        required\n      />\n\n      <TextField\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        value={imdbId}\n        onChange={setImdbId}\n        required\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n            disabled={!areRequiredFieldsFilled}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import './App.scss';\nimport { useState } from 'react';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [moviesList, setMoviesList] = useState([...moviesFromServer]);\n\n  const addNewMovie = (newMovie: Movie) => {\n    setMoviesList((previousMovies) => [...previousMovies, newMovie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={moviesList} />\n      </div>\n\n      <div className=\"sidebar\">\n        <NewMovie onAdd={addNewMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}